<?php declare(strict_types=1);

namespace Framework\Database\Cli;

use Framework\Application\Manager as ApplicationManager;
use Framework\Cli\Interface\Controller;
use Framework\Cli\Symbol;
use Exception;
use Framework\Database\Abstract\Model as AbstractModel;
use Framework\Database\Abstract\Resource\Model as AbstractResourceModel;

/**
 * @class Framework\Database\Cli\Make
 */
class Make implements Controller
{
    private string $rootDirectory;

    /**
     * @method __construct
     */
    public function __construct()
    {
        $this->rootDirectory = ApplicationManager::getRootDirectory();
    }

    /**
     * @cli make:model
     * @cliDescription Make model: samlpe "php cli make:model Vendor/Module/Model/Name"
     * @param string $className Full class name like "Vendor/Module/Model/Name" or "Vendor/Module/Model/Space/Name"
     * @return void
     * @throws Exception
     */
    public function make(string $className): void
    {
        $fullClassName = ltrim($className, '/');
        $fullClassName = ltrim($className, '\\');
        $fullClassName = str_replace('\\', '/', $fullClassName);
        if (!preg_match('/^([A-Z]{1}[a-z]+)\/([A-Z]{1}[a-z]+)\/Model(\/[A-Z]{1}[a-z]+)+$/', $fullClassName)) {
            throw new Exception('Invalid model name, should be in the format of "Vendor/Module/Model/Name" or "Vendor/Module/Model/Space/Name"');
        }

        $fullClassName = str_replace('/', '\\', $fullClassName);

        $modelFile = "{$this->rootDirectory}/app/module/{$fullClassName}.php";
        $modelFile = str_replace('\\', '/', $modelFile);
        if (is_file($modelFile)) {
            throw new Exception("The {$modelFile} file already exists");
        }

        $dirName = dirname($modelFile);
        if (!is_dir($dirName)) {
            mkdir($dirName, 0755, true);
        }

        $classExploded = explode('\\', $fullClassName);
        $className = array_pop($classExploded);
        $namespace = implode('\\', $classExploded);
        $dateTime = date('Y-m-d H:i:s');
        $content = "<?php declare(strict_types=1);\n\n" .
                   "namespace {$namespace};\n\n" .
                   "use " . AbstractModel::class . " as AbstractModel;\n\n" .
                   "/**\n" .
                   " * Generated by www.Tereta.dev on {$dateTime}\n" .
                   " *\n" .
                   " * @class {$fullClassName}\n" .
                   " * @package {$namespace}\n" .
                   " */\n" .
                   "class {$className} extends AbstractModel \n{\n}\n";

        file_put_contents($modelFile, $content);

        echo Symbol::COLOR_GREEN . "The \"{$fullClassName}\" model successfully created at the {$modelFile} file\n" . Symbol::COLOR_RESET;
    }

    /**
     * @cli make:model:resource
     * @cliDescription Make model: samlpe "php cli make:model:resource Vendor/Module/Model/Resource/Name"
     * @param string $className Full class name like "Vendor/Module/Model/Resource/Name" or "Vendor/Module/Model/Resource/Space/Name"
     * @param string $tableName The table name in the database
     * @return void
     * @throws Exception
     */
    public function makeResource(string $className, string $tableName): void
    {
        $fullClassName = ltrim($className, '/');
        $fullClassName = ltrim($className, '\\');
        $fullClassName = str_replace('\\', '/', $fullClassName);
        if (!preg_match('/^([A-Z]{1}[a-z]+)\/([A-Z]{1}[a-z]+)\/Model\/Resource(\/[A-Z]{1}[a-z]+)+$/', $fullClassName)) {
            throw new Exception('Invalid model name, should be in the format of "Vendor/Module/Model/Resource/Name" or "Vendor/Module/Model/Resource/Space/Name"');
        }

        if (!preg_match('/^[A-Z0-9a-z_]+$/', $tableName)) {
            throw new Exception('Invalid table name, should be in the format of "a-z0-9_" for example "sampleTableName"');
        }

        $fullClassName = str_replace('/', '\\', $fullClassName);

        $modelFile = "{$this->rootDirectory}/app/module/{$fullClassName}.php";
        $modelFile = str_replace('\\', '/', $modelFile);
        if (is_file($modelFile)) {
            throw new Exception("The {$modelFile} file already exists");
        }

        $dirName = dirname($modelFile);
        if (!is_dir($dirName)) {
            mkdir($dirName, 0755, true);
        }

        $classExploded = explode('\\', $fullClassName);
        $className = array_pop($classExploded);
        $namespace = implode('\\', $classExploded);
        $dateTime = date('Y-m-d H:i:s');
        $content = "<?php declare(strict_types=1);\n\n" .
            "namespace {$namespace};\n\n" .
            "use " . AbstractResourceModel::class . " as AbstractResourceModel;\n\n" .
            "/**\n" .
            " * Generated by www.Tereta.dev on {$dateTime}\n" .
            " *\n" .
            " * @class {$fullClassName}\n" .
            " * @package {$namespace}\n" .
            " */\n" .
            "class {$className} extends AbstractResourceModel \n{\n" .
            "    public function __construct()\n" .
            "    {\n" .
            "        parent::__construct('{$tableName}');\n" .
            "    }\n" .
            "}\n";

        file_put_contents($modelFile, $content);

        echo Symbol::COLOR_GREEN . "The \"{$fullClassName}\" resource model successfully created at the {$modelFile} file\n" . Symbol::COLOR_RESET;
    }

    /**
     * @cli make:model:collection
     * @cliDescription Make model: samlpe "php cli make:model:collection Vendor/Module/Model/Resource/Name"
     * @param string $className Full class name like "Vendor/Module/Model/Resource/Collection/Name" or "Vendor/Module/Model/Resource/Collection/Space/Name"
     * @param string $tableName The table name in the database
     * @return void
     * @throws Exception
     */
    public function makeCollection(string $className, string $tableName): void
    {
        $fullClassName = ltrim($className, '/');
        $fullClassName = ltrim($className, '\\');
        $fullClassName = str_replace('\\', '/', $fullClassName);
        if (!preg_match('/^([A-Z]{1}[a-z]+)\/([A-Z]{1}[a-z]+)\/Model\/Resource(\/[A-Z]{1}[a-z]+)+$/', $fullClassName)) {
            throw new Exception('Invalid model name, should be in the format of "Vendor/Module/Model/Resource/Name" or "Vendor/Module/Model/Resource/Space/Name"');
        }

        if (!preg_match('/^[A-Z0-9a-z_]+$/', $tableName)) {
            throw new Exception('Invalid table name, should be in the format of "a-z0-9_" for example "sampleTableName"');
        }

        $fullClassName = str_replace('/', '\\', $fullClassName);

        $modelFile = "{$this->rootDirectory}/app/module/{$fullClassName}.php";
        $modelFile = str_replace('\\', '/', $modelFile);
        if (is_file($modelFile)) {
            throw new Exception("The {$modelFile} file already exists");
        }

        $dirName = dirname($modelFile);
        if (!is_dir($dirName)) {
            mkdir($dirName, 0755, true);
        }

        $classExploded = explode('\\', $fullClassName);
        $className = array_pop($classExploded);
        $namespace = implode('\\', $classExploded);
        $dateTime = date('Y-m-d H:i:s');
        $content = "<?php declare(strict_types=1);\n\n" .
            "namespace {$namespace};\n\n" .
            "use " . AbstractResourceModel::class . " as AbstractResourceModel;\n\n" .
            "/**\n" .
            " * Generated by www.Tereta.dev on {$dateTime}\n" .
            " *\n" .
            " * @class {$fullClassName}\n" .
            " * @package {$namespace}\n" .
            " */\n" .
            "class {$className} extends AbstractResourceModel \n{\n" .
            "    public function __construct()\n" .
            "    {\n" .
            "        parent::__construct('{$tableName}');\n" .
            "    }\n" .
            "}\n";

        file_put_contents($modelFile, $content);

        echo Symbol::COLOR_GREEN . "The \"{$fullClassName}\" resource model successfully created at the {$modelFile} file\n" . Symbol::COLOR_RESET;
    }
}